{"ast":null,"code":"var _jsxFileName = \"/app/src/projects/newProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { NAME_PROJECT, REQUESTED_SUCCEEDED_CLOSE_PROJECT } from \"../redux/types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { fetchNewProject } from \"../redux/actionProjects\";\nimport { Alert } from \"../Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewProject() {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  const [newProject, setNewProject] = useState(\"\"); // useEffect(() => {\n  //   dispatch({ type: NAME_PROJECT, payload: \"\" });\n  // }, [])\n\n  useEffect(() => {\n    if (store.projects.success) {\n      setTimeout(() => {\n        history.push(\"/projects/teamgeist\");\n        dispatch({\n          type: REQUESTED_SUCCEEDED_CLOSE_PROJECT\n        });\n      }, 1400);\n    }\n  }, [store.projects.success]);\n  useEffect(() => {\n    if (store.projects.flagSuccess) {\n      setTimeout(() => {\n        dispatch({\n          type: NAME_PROJECT,\n          payload: \"\"\n        });\n      }, 1400);\n    }\n  }, [store.projects.flagSuccess]);\n  useEffect(() => {\n    if (store.projects.nameProject != \"\") {\n      const project = {\n        projectName: store.projects.nameProject,\n        id: store.users.userId\n      };\n      dispatch(fetchNewProject(project));\n    }\n  }, [store.projects.nameProject]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch({\n      type: NAME_PROJECT,\n      payload: newProject\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [store.projects.text && /*#__PURE__*/_jsxDEV(Alert, {\n      text: store.projects.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form11\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formGridAddress1\",\n            onChange: e => setNewProject(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Project name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Enter project name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          type: \"submit\",\n          children: \"Create project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewProject, \"MxbtNah4gZvAsioNrPU4eEVMU3w=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = NewProject;\nconst mapDispatchToProps = {\n  fetchNewProject\n};\n\nfunction mapStateToProps(state) {\n  return {\n    text: state.projects.text,\n    store: state\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProject);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["/app/src/projects/newProject.js"],"names":["React","useEffect","useState","Button","Form","Row","useHistory","useSelector","useDispatch","connect","NAME_PROJECT","REQUESTED_SUCCEEDED_CLOSE_PROJECT","fetchNewProject","Alert","NewProject","history","dispatch","store","state","newProject","setNewProject","projects","success","setTimeout","push","type","flagSuccess","payload","nameProject","project","projectName","id","users","userId","handleSubmit","event","preventDefault","text","e","target","value","mapDispatchToProps","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { NAME_PROJECT, REQUESTED_SUCCEEDED_CLOSE_PROJECT } from \"../redux/types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { fetchNewProject } from \"../redux/actionProjects\";\nimport { Alert } from \"../Alert\";\n\nfunction NewProject() {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n  const [newProject, setNewProject] = useState(\"\");\n\n  // useEffect(() => {\n  //   dispatch({ type: NAME_PROJECT, payload: \"\" });\n  // }, [])\n\n  useEffect(() => {\n    if (store.projects.success) {\n      setTimeout(() => {\n        history.push(\"/projects/teamgeist\");\n        dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_PROJECT });\n      }, 1400);\n    }\n  }, [store.projects.success]);\n\n  useEffect(() => {\n    if (store.projects.flagSuccess) {\n      setTimeout(() => {\n        dispatch({ type: NAME_PROJECT, payload: \"\" });\n      }, 1400);\n    }\n  }, [store.projects.flagSuccess]);\n\n  useEffect(() => {\n    if (store.projects.nameProject != \"\") {\n      const project = {\n        projectName: store.projects.nameProject,\n        id: store.users.userId,\n      };\n      dispatch(fetchNewProject(project));\n    }\n  }, [store.projects.nameProject]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch({ type: NAME_PROJECT, payload: newProject });\n  };\n\n  return (\n    <div>\n      {store.projects.text && <Alert text={store.projects.text} />}\n      <div className=\"form11\">\n        <Form onSubmit={handleSubmit}>\n          <Row className=\"mb-3\">\n          <Col xs=\"10\"></Col>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridAddress1\"\n              onChange={(e) => setNewProject(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                  Project name\n                </h4>\n              </Form.Label>\n              <Form.Control placeholder=\"Enter project name\" required />\n            </Form.Group>\n          </Row>\n          <Button variant=\"warning\" type=\"submit\">\n            Create project\n          </Button>{\" \"}\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  fetchNewProject,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    text: state.projects.text,\n    store: state,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProject);\n"]},"metadata":{},"sourceType":"module"}