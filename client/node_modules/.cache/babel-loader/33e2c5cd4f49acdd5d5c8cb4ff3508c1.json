{"ast":null,"code":"var _jsxFileName = \"/app/src/users/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { REQUESTED_SUCCEEDED_CLOSE_USER, USER_EMAIL, USER_PASSWORD } from \"../redux/types\";\nimport { Alert } from \"../Alert\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { fetchLogin } from \"../redux/actionUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n\n  if (store.users.success) {\n    setTimeout(() => {\n      history.push(\"/home\");\n      dispatch({\n        type: REQUESTED_SUCCEEDED_CLOSE_USER\n      });\n    }, 1400);\n  }\n\n  useEffect(() => {\n    if (store.users.userPassword != \"\") {\n      const user = {\n        email: store.users.userEmail,\n        password: store.users.userPassword\n      };\n      dispatch(fetchLogin(user));\n    }\n  }, [store.users.userPassword]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch({\n      type: USER_EMAIL,\n      payload: email\n    });\n    dispatch({\n      type: USER_PASSWORD,\n      payload: password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"firstform\",\n    children: [store.users.text && /*#__PURE__*/_jsxDEV(Alert, {\n      text: store.users.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form11\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          style: {\n            marginLeft: \"3em\",\n            marginRight: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"10\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGridEmail\",\n              onChange: e => setEmail(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                style: {\n                  fontStyle: 'italic'\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"We'll never share your email with anyone else\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGridPassword\",\n              onChange: e => setPassword(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                style: {\n                  fontStyle: 'italic'\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          type: \"submit\",\n          style: {\n            marginLeft: \"4em\",\n            marginRight: \"auto\"\n          },\n          children: \"Authorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"UHuWOMuVuIwOf++KA6MflOtE+88=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Login;\nconst mapDispatchToProps = {\n  fetchLogin\n};\n\nfunction mapStateToProps(state) {\n  return {\n    store: state\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/app/src/users/login.js"],"names":["React","useEffect","useState","Button","Form","Row","Col","useHistory","useSelector","useDispatch","connect","REQUESTED_SUCCEEDED_CLOSE_USER","USER_EMAIL","USER_PASSWORD","Alert","fetchLogin","Login","history","email","setEmail","password","setPassword","dispatch","store","state","users","success","setTimeout","push","type","userPassword","user","userEmail","handleSubmit","event","preventDefault","payload","text","marginLeft","marginRight","e","target","value","fontStyle","mapDispatchToProps","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { REQUESTED_SUCCEEDED_CLOSE_USER, USER_EMAIL, USER_PASSWORD } from \"../redux/types\";\nimport { Alert } from \"../Alert\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { fetchLogin } from \"../redux/actionUsers\";\n\nfunction Login() {\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  if (store.users.success) {\n    setTimeout(() => {\n      history.push(\"/home\");\n      dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_USER });\n    }, 1400);\n  }\n\n  useEffect(() => {\n    if (store.users.userPassword != \"\") {\n      const user = {\n        email: store.users.userEmail,\n        password: store.users.userPassword,\n      };\n      dispatch(fetchLogin(user));\n    }\n  }, [store.users.userPassword]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch({ type: USER_EMAIL, payload: email });\n    dispatch({ type: USER_PASSWORD, payload: password });\n  };\n\n  return (\n    <div className=\"firstform\">\n      {store.users.text && <Alert text={store.users.text} />}\n      <div className=\"form11\">\n        <Form onSubmit={handleSubmit}>\n          <Row className=\"mb-3\" style={{\n          marginLeft: \"3em\",\n          marginRight: \"auto\",\n        }}>\n          <Col xs=\"10\">\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridEmail\"\n              onChange={(e) => setEmail(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                Email\n                </h4>\n              </Form.Label>\n              <Form.Control \n                type=\"email\" \n                placeholder=\"Enter email\" \n                style={{ fontStyle: 'italic' }}\n                required />\n              <Form.Text className=\"text-muted\">\n                <i>We'll never share your email with anyone else</i>\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridPassword\"\n              onChange={(e) => setPassword(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                Password\n                </h4>\n              </Form.Label>\n              <Form.Control \n                type=\"password\" \n                placeholder=\"Password\" \n                style={{ fontStyle: 'italic' }}\n                required \n              />\n            </Form.Group>\n            </Col>\n          </Row>\n\n          <Button variant=\"warning\" type=\"submit\" style={{\n          marginLeft: \"4em\",\n          marginRight: \"auto\",\n        }}>\n            Authorization\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  fetchLogin,\n};\n\nfunction mapStateToProps(state) {\n  return { store: state };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}