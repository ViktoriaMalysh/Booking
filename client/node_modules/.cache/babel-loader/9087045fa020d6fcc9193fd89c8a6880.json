{"ast":null,"code":"var _jsxFileName = \"/app/src/users/deleteAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { REQUESTED_SUCCEEDED_CLOSE_USER } from \"../redux/types\";\nimport { fetchDelete } from \"../redux/actionUsers\";\nimport { Alert } from \"../Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteAccount() {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    dispatch(fetchDelete(token));\n\n    if (store.users.success) {\n      setTimeout(() => {\n        dispatch({\n          type: REQUESTED_SUCCEEDED_CLOSE_USER\n        });\n        history.push(\"/users/auth\");\n      }, 1400);\n    }\n  }, [store.users.success]);\n  useEffect(() => {\n    if (store.users.err) {\n      setTimeout(() => {\n        history.push(\"/\");\n        dispatch({\n          type: REQUESTED_SUCCEEDED_CLOSE_USER\n        });\n      }, 1400);\n    }\n  }, [store.users.err]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: store.users.text && /*#__PURE__*/_jsxDEV(Alert, {\n      text: store.users.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s(DeleteAccount, \"Nzl3N9LUwDzIAHlMRG6gymQF44A=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = DeleteAccount;\nconst mapDispatchToProps = {\n  fetchDelete\n};\n\nfunction mapStateToProps(state) {\n  return {\n    store: state\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount);\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"sources":["/app/src/users/deleteAccount.js"],"names":["useEffect","useHistory","useDispatch","useSelector","connect","REQUESTED_SUCCEEDED_CLOSE_USER","fetchDelete","Alert","DeleteAccount","history","dispatch","store","state","token","localStorage","getItem","users","success","setTimeout","type","push","err","text","mapDispatchToProps","mapStateToProps"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,8BAAT,QAA+C,gBAA/C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAAzB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAL,IAAAA,QAAQ,CAACJ,WAAW,CAACO,KAAD,CAAZ,CAAR;;AACA,QAAIF,KAAK,CAACK,KAAN,CAAYC,OAAhB,EAAyB;AACvBC,MAAAA,UAAU,CAAC,MAAM;AACfR,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAEd;AAAR,SAAD,CAAR;AACAI,QAAAA,OAAO,CAACW,IAAR,CAAa,aAAb;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GATQ,EASN,CAACT,KAAK,CAACK,KAAN,CAAYC,OAAb,CATM,CAAT;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAK,CAACK,KAAN,CAAYK,GAAhB,EAAqB;AACnBH,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACAV,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAEd;AAAR,SAAD,CAAR;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GAPQ,EAON,CAACM,KAAK,CAACK,KAAN,CAAYK,GAAb,CAPM,CAAT;AASA,sBAAO;AAAA,cAAMV,KAAK,CAACK,KAAN,CAAYM,IAAZ,iBAAoB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEX,KAAK,CAACK,KAAN,CAAYM;AAAzB;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA1BQd,a;UACOP,U,EACGC,W,EACHC,W;;;KAHPK,a;AA4BT,MAAMe,kBAAkB,GAAG;AACzBjB,EAAAA;AADyB,CAA3B;;AAIA,SAASkB,eAAT,CAAyBZ,KAAzB,EAAgC;AAC9B,SAAO;AAAED,IAAAA,KAAK,EAAEC;AAAT,GAAP;AACD;;AAED,eAAeR,OAAO,CAACoB,eAAD,EAAkBD,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { REQUESTED_SUCCEEDED_CLOSE_USER } from \"../redux/types\";\nimport { fetchDelete } from \"../redux/actionUsers\";\nimport { Alert } from \"../Alert\";\n\nfunction DeleteAccount() {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    dispatch(fetchDelete(token));\n    if (store.users.success) {\n      setTimeout(() => {\n        dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_USER });\n        history.push(\"/users/auth\");\n      }, 1400);\n    }\n  }, [store.users.success]);\n\n  useEffect(() => {\n    if (store.users.err) {\n      setTimeout(() => {\n        history.push(\"/\");\n        dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_USER });\n      }, 1400);\n    }\n  }, [store.users.err]);\n\n  return <div>{store.users.text && <Alert text={store.users.text} />}</div>;\n}\n\nconst mapDispatchToProps = {\n  fetchDelete,\n};\n\nfunction mapStateToProps(state) {\n  return { store: state };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount);\n"]},"metadata":{},"sourceType":"module"}