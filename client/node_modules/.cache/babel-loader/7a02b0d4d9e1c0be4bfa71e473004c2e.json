{"ast":null,"code":"import axios from \"axios\";\nimport { HIDE_LOADER, REQUESTED_FAILED_PROJECT, REQUESTED_PROJECT, REQUESTED_SUCCEEDED_CLOSE_PROJECT, REQUESTED_SUCCEEDED_PROJECT, SHOW_ALERT, SHOW_LOADER, SHOW_PROJECT } from \"./types\";\n\nconst requestProject = () => {\n  return {\n    type: REQUESTED_PROJECT\n  };\n};\n\nconst requestSuccessProject = message => {\n  return dispatch => {\n    dispatch({\n      type: REQUESTED_SUCCEEDED_PROJECT\n    });\n    dispatch(alert(message));\n  };\n};\n\nconst requestErrorProject = (err, message) => {\n  return dispatch => {\n    console.log('Error:', err);\n    dispatch({\n      type: REQUESTED_FAILED_PROJECT\n    });\n    dispatch(alert(message));\n  };\n};\n\nexport const alert = message => {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: message\n    });\n    setTimeout(() => {\n      dispatch({\n        type: SHOW_ALERT,\n        payload: false\n      });\n    }, 1200);\n  };\n};\nexport const fetchTime = project => {\n  return dispatch => {\n    const time = project.end - project.start;\n    dispatch(requestProject());\n    axios.post(`http://localhost:8080/project/addTime`, {\n      projectName: project.projectName,\n      id: project.id,\n      time: time\n    }).then(res => res.json()).then(dispatch(requestSuccessProject()), err => dispatch(requestErrorProject(err)));\n  };\n};\nexport const fetchNewProject = project => {\n  return dispatch => {\n    dispatch(requestProject());\n    axios.post(`http://localhost:8080/project/create`, {\n      projectName: project.projectName,\n      id: project.id\n    }).then(res => res.data.projectName).then(data => dispatch(requestSuccessProject(`Project ${data} was created!`)), err => dispatch(requestErrorProject(err, `Error! New project was not created`)));\n  };\n};\nexport const fetchShowProject = id => {\n  return dispatch => {\n    dispatch(requestProject());\n    axios.post(`http://localhost:8080/project/show`, {\n      id: id\n    }).then(res => dispatch({\n      type: SHOW_PROJECT,\n      payload: res.data\n    })).then(data => dispatch(requestSuccessProject(data)), dispatch({\n      type: SHOW_LOADER\n    }), setTimeout(() => {\n      dispatch({\n        type: HIDE_LOADER\n      });\n    }, 300), err => dispatch(requestErrorProject(err)));\n  };\n};\nexport const fetchSearchProject = projectName => {\n  return dispatch => {\n    dispatch(requestProject());\n    axios.post(`http://localhost:8080/project/search`, {\n      projectName: projectName\n    }).then(res => dispatch({\n      type: SHOW_PROJECT,\n      payload: res.data\n    })).then(data => dispatch(requestSuccessProject()), dispatch({\n      type: SHOW_LOADER\n    }), setTimeout(() => {\n      dispatch({\n        type: HIDE_LOADER\n      });\n    }, 300), dispatch({\n      type: REQUESTED_SUCCEEDED_CLOSE_PROJECT\n    }), err => dispatch(requestErrorProject(err, 'Project not found')));\n  };\n};\nexport const fetchDeleteProject = id => {\n  return dispatch => {\n    dispatch(requestProject());\n    axios.post(`http://localhost:8080/project/delete`, {\n      id: id\n    }).then(res => res.data.delete).then(data => console.log(data), data => dispatch(requestSuccessProject(data)), dispatch({\n      type: REQUESTED_SUCCEEDED_CLOSE_PROJECT\n    }), err => dispatch(requestErrorProject(err, 'Error. Try again')));\n  };\n};","map":{"version":3,"sources":["/app/src/redux/actionProjects.js"],"names":["axios","HIDE_LOADER","REQUESTED_FAILED_PROJECT","REQUESTED_PROJECT","REQUESTED_SUCCEEDED_CLOSE_PROJECT","REQUESTED_SUCCEEDED_PROJECT","SHOW_ALERT","SHOW_LOADER","SHOW_PROJECT","requestProject","type","requestSuccessProject","message","dispatch","alert","requestErrorProject","err","console","log","payload","setTimeout","fetchTime","project","time","end","start","post","projectName","id","then","res","json","fetchNewProject","data","fetchShowProject","fetchSearchProject","fetchDeleteProject","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,wBAAtB,EAAgDC,iBAAhD,EAAmEC,iCAAnE,EAAsGC,2BAAtG,EAAmIC,UAAnI,EAA+IC,WAA/I,EAA4JC,YAA5J,QAAgL,SAAhL;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAO;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAP;AACD,CAFD;;AAIA,MAAMQ,qBAAqB,GAAIC,OAAD,IAAa;AACzC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACAQ,IAAAA,QAAQ,CAACC,KAAK,CAACF,OAAD,CAAN,CAAR;AACD,GAHD;AAID,CALD;;AAOA,MAAMG,mBAAmB,GAAG,CAACC,GAAD,EAAMJ,OAAN,KAAkB;AAC5C,SAAQC,QAAD,IAAc;AACnBI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACAH,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACAW,IAAAA,QAAQ,CAACC,KAAK,CAACF,OAAD,CAAN,CAAR;AACD,GAJD;AAKD,CAND;;AAQA,OAAO,MAAME,KAAK,GAAIF,OAAD,IAAa;AAChC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEJ,UAAP;AAAmBa,MAAAA,OAAO,EAAEP;AAA5B,KAAD,CAAR;AACAQ,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAEJ,UAAP;AAAmBa,QAAAA,OAAO,EAAE;AAA5B,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;AAMD,CAPM;AASP,OAAO,MAAME,SAAS,GAAIC,OAAD,IAAa;AACpC,SAAQT,QAAD,IAAc;AACnB,UAAMU,IAAI,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACG,KAAnC;AACAZ,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACAT,IAAAA,KAAK,CACF0B,IADH,CACS,uCADT,EACiD;AAC7CC,MAAAA,WAAW,EAAEL,OAAO,CAACK,WADwB;AAE7CC,MAAAA,EAAE,EAAEN,OAAO,CAACM,EAFiC;AAG7CL,MAAAA,IAAI,EAAEA;AAHuC,KADjD,EAMGM,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOQhB,QAAQ,CAACF,qBAAqB,EAAtB,CAPhB,EAO4CK,GAAD,IAASH,QAAQ,CAACE,mBAAmB,CAACC,GAAD,CAApB,CAP5D;AAQD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMgB,eAAe,GAAIV,OAAD,IAAa;AAC1C,SAAQT,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACAT,IAAAA,KAAK,CACF0B,IADH,CACS,sCADT,EACgD;AAC5CC,MAAAA,WAAW,EAAEL,OAAO,CAACK,WADuB;AAE5CC,MAAAA,EAAE,EAAEN,OAAO,CAACM;AAFgC,KADhD,EAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACG,IAAJ,CAASN,WAL1B,EAMGE,IANH,CAOKI,IAAD,IAAUpB,QAAQ,CAACF,qBAAqB,CAAE,WAAUsB,IAAK,eAAjB,CAAtB,CAPtB,EAQKjB,GAAD,IAASH,QAAQ,CAACE,mBAAmB,CAACC,GAAD,EAAO,oCAAP,CAApB,CARrB;AAUD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMkB,gBAAgB,GAAIN,EAAD,IAAQ;AACtC,SAAQf,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACAT,IAAAA,KAAK,CACF0B,IADH,CACS,oCADT,EAC8C;AAC1CE,MAAAA,EAAE,EAAEA;AADsC,KAD9C,EAIGC,IAJH,CAISC,GAAD,IAASjB,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEF,YAAR;AAAsBW,MAAAA,OAAO,EAAEW,GAAG,CAACG;AAAnC,KAAD,CAJzB,EAKGJ,IALH,CAMKI,IAAD,IAAUpB,QAAQ,CAACF,qBAAqB,CAACsB,IAAD,CAAtB,CANtB,EAOIpB,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAPZ,EAQIa,UAAU,CAAC,MAAM;AACfP,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAET;AAAR,OAAD,CAAR;AACD,KAFS,EAEP,GAFO,CARd,EAWKe,GAAD,IAASH,QAAQ,CAACE,mBAAmB,CAACC,GAAD,CAApB,CAXrB;AAaD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMmB,kBAAkB,GAAIR,WAAD,IAAiB;AACjD,SAAQd,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACAT,IAAAA,KAAK,CACF0B,IADH,CACS,sCADT,EACgD;AAC5CC,MAAAA,WAAW,EAAEA;AAD+B,KADhD,EAIGE,IAJH,CAISC,GAAD,IAASjB,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEF,YAAR;AAAsBW,MAAAA,OAAO,EAAEW,GAAG,CAACG;AAAnC,KAAD,CAJzB,EAKGJ,IALH,CAMKI,IAAD,IAAUpB,QAAQ,CAACF,qBAAqB,EAAtB,CANtB,EAOIE,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAPZ,EAQIa,UAAU,CAAC,MAAM;AACfP,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAET;AAAR,OAAD,CAAR;AACD,KAFS,EAEP,GAFO,CARd,EAWIY,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAXZ,EAYKY,GAAD,IAASH,QAAQ,CAACE,mBAAmB,CAACC,GAAD,EAAM,mBAAN,CAApB,CAZrB;AAcD,GAhBD;AAiBD,CAlBM;AAoBP,OAAO,MAAMoB,kBAAkB,GAAIR,EAAD,IAAQ;AACxC,SAAQf,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACAT,IAAAA,KAAK,CACF0B,IADH,CACS,sCADT,EACgD;AAC5CE,MAAAA,EAAE,EAAEA;AADwC,KADhD,EAIGC,IAJH,CAISC,GAAD,IAASA,GAAG,CAACG,IAAJ,CAASI,MAJ1B,EAKGR,IALH,CAMKI,IAAD,IAAUhB,OAAO,CAACC,GAAR,CAAYe,IAAZ,CANd,EAOKA,IAAD,IAAUpB,QAAQ,CAACF,qBAAqB,CAACsB,IAAD,CAAtB,CAPtB,EAQIpB,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEN;AAAR,KAAD,CARZ,EASKY,GAAD,IAASH,QAAQ,CAACE,mBAAmB,CAACC,GAAD,EAAM,kBAAN,CAApB,CATrB;AAWD,GAbD;AAcD,CAfM","sourcesContent":["import axios from \"axios\";\nimport { HIDE_LOADER, REQUESTED_FAILED_PROJECT, REQUESTED_PROJECT, REQUESTED_SUCCEEDED_CLOSE_PROJECT, REQUESTED_SUCCEEDED_PROJECT, SHOW_ALERT, SHOW_LOADER, SHOW_PROJECT } from \"./types\";\n\nconst requestProject = () => {\n  return { type: REQUESTED_PROJECT };\n};\n\nconst requestSuccessProject = (message) => {\n  return (dispatch) => {\n    dispatch({ type: REQUESTED_SUCCEEDED_PROJECT });\n    dispatch(alert(message))\n  };\n};\n\nconst requestErrorProject = (err, message) => {\n  return (dispatch) => {\n    console.log('Error:', err)\n    dispatch({ type: REQUESTED_FAILED_PROJECT })\n    dispatch(alert(message))\n  };\n};\n\nexport const alert = (message) => {\n  return (dispatch) => {\n    dispatch({type: SHOW_ALERT, payload: message})\n    setTimeout(() => {\n      dispatch({type: SHOW_ALERT, payload: false})\n    }, 1200)\n  };\n};\n\nexport const fetchTime = (project) => {\n  return (dispatch) => {\n    const time = project.end - project.start;\n    dispatch(requestProject());\n    axios\n      .post(`http://localhost:8080/project/addTime`, {\n        projectName: project.projectName,\n        id: project.id,\n        time: time,\n      })\n      .then((res) => res.json())\n      .then(dispatch(requestSuccessProject()), (err) => dispatch(requestErrorProject(err)));\n  };\n};\n\nexport const fetchNewProject = (project) => {\n  return (dispatch) => {\n    dispatch(requestProject());\n    axios\n      .post(`http://localhost:8080/project/create`, {\n        projectName: project.projectName,\n        id: project.id,\n      })\n      .then((res) => res.data.projectName)\n      .then(\n        (data) => dispatch(requestSuccessProject(`Project ${data} was created!`)),\n        (err) => dispatch(requestErrorProject(err, `Error! New project was not created`))\n      );\n  };\n};\n\nexport const fetchShowProject = (id) => {\n  return (dispatch) => {\n    dispatch(requestProject());\n    axios\n      .post(`http://localhost:8080/project/show`, {\n        id: id,\n      })\n      .then((res) => dispatch({ type: SHOW_PROJECT, payload: res.data }))\n      .then(\n        (data) => dispatch(requestSuccessProject(data)),\n        dispatch({ type: SHOW_LOADER }),\n        setTimeout(() => {\n          dispatch({ type: HIDE_LOADER });\n        }, 300),\n        (err) => dispatch(requestErrorProject(err))\n      );\n  };\n};\n\nexport const fetchSearchProject = (projectName) => {\n  return (dispatch) => {\n    dispatch(requestProject());\n    axios\n      .post(`http://localhost:8080/project/search`, {\n        projectName: projectName,\n      })\n      .then((res) => dispatch({ type: SHOW_PROJECT, payload: res.data }))\n      .then(\n        (data) => dispatch(requestSuccessProject()),\n        dispatch({ type: SHOW_LOADER }),\n        setTimeout(() => {\n          dispatch({ type: HIDE_LOADER });\n        }, 300),\n        dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_PROJECT }),\n        (err) => dispatch(requestErrorProject(err, 'Project not found'))\n      );\n  };\n};\n\nexport const fetchDeleteProject = (id) => {\n  return (dispatch) => {\n    dispatch(requestProject());\n    axios\n      .post(`http://localhost:8080/project/delete`, {\n        id: id,\n      })\n      .then((res) => res.data.delete)\n      .then(\n        (data) => console.log(data),\n        (data) => dispatch(requestSuccessProject(data)),\n        dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_PROJECT }),\n        (err) => dispatch(requestErrorProject(err, 'Error. Try again'))\n      );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}