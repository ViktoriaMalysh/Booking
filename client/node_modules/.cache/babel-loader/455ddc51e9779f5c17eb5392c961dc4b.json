{"ast":null,"code":"var _jsxFileName = \"/app/src/users/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { REQUESTED_SUCCEEDED_CLOSE_USER, USER_EMAIL, USER_NAME, USER_PASSWORD, USER_SURNAME } from \"../redux/types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { fetchAuth } from \"../redux/actionUsers\";\nimport { Alert } from \"../Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Auth() {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    if (store.users.success) {\n      setTimeout(() => {\n        history.push(\"/\");\n        dispatch({\n          type: REQUESTED_SUCCEEDED_CLOSE_USER\n        });\n      }, 1400);\n    }\n  }, [store.users.success]);\n  useEffect(() => {\n    if (store.users.userPassword != \"\") {\n      const user = {\n        name: store.users.userName,\n        surname: store.users.userSurname,\n        email: store.users.userEmail,\n        password: store.users.userPassword\n      };\n      dispatch(fetchAuth(user));\n    }\n  }, [store.users.userPassword]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch({\n      type: USER_NAME,\n      payload: name\n    });\n    dispatch({\n      type: USER_SURNAME,\n      payload: surname\n    });\n    dispatch({\n      type: USER_EMAIL,\n      payload: email\n    });\n    dispatch({\n      type: USER_PASSWORD,\n      payload: password\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"firstform\",\n    children: [store.users.text && /*#__PURE__*/_jsxDEV(Alert, {\n      text: store.users.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form11\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          style: {\n            marginLeft: \"3em\",\n            marginRight: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"10\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGridAddress1\",\n              onChange: e => setName(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Enter name\",\n                required: true,\n                style: {\n                  fontStyle: 'italic'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGridAddress2\",\n              onChange: e => setSurname(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Surname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"Enter surname\",\n                required: true,\n                style: {\n                  fontStyle: 'italic'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGridEmail\",\n              onChange: e => setEmail(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                required: true,\n                style: {\n                  fontStyle: 'italic'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formGridPassword\",\n              onChange: e => setPassword(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                required: true,\n                style: {\n                  fontStyle: 'italic'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          style: {\n            marginLeft: \"4em\",\n            marginRight: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            required: true,\n            label: \"I have read and I accept the Teamgeist\",\n            feedback: \"You must accept the Teamgeist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          type: \"submit\",\n          style: {\n            marginLeft: \"4em\",\n            marginRight: \"auto\"\n          },\n          children: \"Authentication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"Gb7Bf2lh+1KN98iMrpCdbIMfGG0=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Auth;\nconst mapDispatchToProps = {\n  fetchAuth\n};\n\nfunction mapStateToProps(state) {\n  return {\n    store: state\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/app/src/users/auth.js"],"names":["React","useEffect","useState","Button","Form","Row","Col","useHistory","useSelector","useDispatch","connect","REQUESTED_SUCCEEDED_CLOSE_USER","USER_EMAIL","USER_NAME","USER_PASSWORD","USER_SURNAME","fetchAuth","Alert","Auth","validated","setValidated","history","dispatch","store","state","name","setName","surname","setSurname","email","setEmail","password","setPassword","users","success","setTimeout","push","type","userPassword","user","userName","userSurname","userEmail","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","payload","text","marginLeft","marginRight","e","target","value","fontStyle","mapDispatchToProps","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,8BAAT,EAAyCC,UAAzC,EAAqDC,SAArD,EAAgEC,aAAhE,EAA+EC,YAA/E,QAAmG,gBAAnG;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAImB,OAAO,GAAGd,UAAU,EAAxB;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,KAAK,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,KAAK,CAACU,KAAN,CAAYC,OAAhB,EAAyB;AACvBC,MAAAA,UAAU,CAAC,MAAM;AACfd,QAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACAd,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAE1B;AAAR,SAAD,CAAR;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GAPQ,EAON,CAACY,KAAK,CAACU,KAAN,CAAYC,OAAb,CAPM,CAAT;AASAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,KAAK,CAACU,KAAN,CAAYK,YAAZ,IAA4B,EAAhC,EAAoC;AAClC,YAAMC,IAAI,GAAG;AACXd,QAAAA,IAAI,EAAEF,KAAK,CAACU,KAAN,CAAYO,QADP;AAEXb,QAAAA,OAAO,EAAEJ,KAAK,CAACU,KAAN,CAAYQ,WAFV;AAGXZ,QAAAA,KAAK,EAAEN,KAAK,CAACU,KAAN,CAAYS,SAHR;AAIXX,QAAAA,QAAQ,EAAER,KAAK,CAACU,KAAN,CAAYK;AAJX,OAAb;AAMAhB,MAAAA,QAAQ,CAACN,SAAS,CAACuB,IAAD,CAAV,CAAR;AACD;AACF,GAVQ,EAUN,CAAChB,KAAK,CAACU,KAAN,CAAYK,YAAb,CAVM,CAAT;;AAYA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAGF,KAAK,CAACG,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAClCJ,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACK,eAAN;AACD;;AACD7B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAE,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAExB,SAAR;AAAmBqC,MAAAA,OAAO,EAAEzB;AAA5B,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAEtB,YAAR;AAAsBmC,MAAAA,OAAO,EAAEvB;AAA/B,KAAD,CAAR;AACAL,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAEzB,UAAR;AAAoBsC,MAAAA,OAAO,EAAErB;AAA7B,KAAD,CAAR;AACAP,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAEvB,aAAR;AAAuBoC,MAAAA,OAAO,EAAEnB;AAAhC,KAAD,CAAR;AACD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGR,KAAK,CAACU,KAAN,CAAYkB,IAAZ,iBAAoB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE5B,KAAK,CAACU,KAAN,CAAYkB;AAAzB;AAAA;AAAA;AAAA;AAAA,YADvB,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAER,YAAhB;AAAA,gCACE,QAAC,GAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,KAAK,EAAE;AACTS,YAAAA,UAAU,EAAE,KADH;AAETC,YAAAA,WAAW,EAAE;AAFJ,WAFT;AAAA,iCAMA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,SAAS,EAAC,kBAFZ;AAGE,cAAA,QAAQ,EAAGC,CAAD,IAAO5B,OAAO,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAAA,sCAKE,QAAC,IAAD,CAAM,KAAN;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAUE,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,WAAW,EAAC,YAA1B;AAAuC,gBAAA,QAAQ,MAA/C;AAAkD,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAAzD;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,SAAS,EAAC,kBAFZ;AAGE,cAAA,QAAQ,EAAGH,CAAD,IAAO1B,UAAU,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAAA,sCAKE,QAAC,IAAD,CAAM,KAAN;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAUE,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,WAAW,EAAC,eAA1B;AAA0C,gBAAA,QAAQ,MAAlD;AAAoD,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAA3D;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,eA2BE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,QAAQ,EAAGH,CAAD,IAAOxB,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAAA,sCAKE,QAAC,IAAD,CAAM,KAAN;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAUE,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,WAAW,EAAC,aAAvC;AAAqD,gBAAA,QAAQ,MAA7D;AAAgE,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAAvE;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,SAAS,EAAC,YAArB;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BF,eA2CE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,SAAS,EAAC,kBAFZ;AAGE,cAAA,QAAQ,EAAGH,CAAD,IAAOtB,WAAW,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAAA,sCAKE,QAAC,IAAD,CAAM,KAAN;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAUE,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,UAAnB;AAA8B,gBAAA,WAAW,EAAC,UAA1C;AAAqD,gBAAA,QAAQ,MAA7D;AAA+D,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb;AAAtE;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiEE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,KAAK,EAAE;AACpCL,YAAAA,UAAU,EAAE,KADwB;AAEpCC,YAAAA,WAAW,EAAE;AAFuB,WAApC;AAAA,iCAIE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,KAAK,EAAC,wCAFR;AAGE,YAAA,QAAQ,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAjEF,eA4EE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAE;AAC/CD,YAAAA,UAAU,EAAE,KADmC;AAE/CC,YAAAA,WAAW,EAAE;AAFkC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0FD;;GAzIQnC,I;UAEOX,U,EACGE,W,EACHD,W;;;KAJPU,I;AA2IT,MAAMwC,kBAAkB,GAAG;AACzB1C,EAAAA;AADyB,CAA3B;;AAIA,SAAS2C,eAAT,CAAyBnC,KAAzB,EAAgC;AAC9B,SAAO;AAAED,IAAAA,KAAK,EAAEC;AAAT,GAAP;AACD;;AAED,eAAed,OAAO,CAACiD,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CxC,IAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport { REQUESTED_SUCCEEDED_CLOSE_USER, USER_EMAIL, USER_NAME, USER_PASSWORD, USER_SURNAME } from \"../redux/types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { fetchAuth } from \"../redux/actionUsers\";\nimport { Alert } from \"../Alert\";\n\nfunction Auth() {\n  const [validated, setValidated] = useState(false);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (store.users.success) {\n      setTimeout(() => {\n        history.push(\"/\");\n        dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_USER });\n      }, 1400);\n    }\n  }, [store.users.success]);\n\n  useEffect(() => {\n    if (store.users.userPassword != \"\") {\n      const user = {\n        name: store.users.userName,\n        surname: store.users.userSurname,\n        email: store.users.userEmail,\n        password: store.users.userPassword,\n      };\n      dispatch(fetchAuth(user));\n    }\n  }, [store.users.userPassword]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n\n    dispatch({ type: USER_NAME, payload: name });\n    dispatch({ type: USER_SURNAME, payload: surname });\n    dispatch({ type: USER_EMAIL, payload: email });\n    dispatch({ type: USER_PASSWORD, payload: password });\n  };\n\n  return (\n    <div className=\"firstform\">\n      {store.users.text && <Alert text={store.users.text} />}\n      <div className=\"form11\">\n        <Form onSubmit={handleSubmit}>\n          <Row \n            className=\"mb-3\" \n            style={{\n          marginLeft: \"3em\",\n          marginRight: \"auto\",\n        }}>\n          <Col xs=\"10\">\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridAddress1\"\n              onChange={(e) => setName(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                Name\n                </h4>\n              </Form.Label>\n              <Form.Control placeholder=\"Enter name\" required   style={{ fontStyle: 'italic' }}/>\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridAddress2\"\n              onChange={(e) => setSurname(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                  Surname\n                </h4>\n              </Form.Label>\n              <Form.Control placeholder=\"Enter surname\" required  style={{ fontStyle: 'italic' }}/>\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridEmail\"\n              onChange={(e) => setEmail(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                  Email\n                </h4>\n              </Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" required   style={{ fontStyle: 'italic' }}/>\n              <Form.Text className=\"text-muted\">\n                <i>We'll never share your email with anyone else.</i>\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formGridPassword\"\n              onChange={(e) => setPassword(e.target.value)}\n            >\n              <Form.Label>\n                <h4>\n                 Password\n                </h4>\n              </Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" required  style={{ fontStyle: 'italic' }}/>\n            </Form.Group>\n            </Col>\n          </Row>\n\n          <Form.Group className=\"mb-3\" style={{\n          marginLeft: \"4em\",\n          marginRight: \"auto\",\n        }}>\n            <Form.Check\n              required\n              label=\"I have read and I accept the Teamgeist\"\n              feedback=\"You must accept the Teamgeist\"\n            />\n          </Form.Group>\n\n          <Button variant=\"warning\" type=\"submit\" style={{\n          marginLeft: \"4em\",\n          marginRight: \"auto\",\n        }}>\n            Authentication\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = {\n  fetchAuth,\n};\n\nfunction mapStateToProps(state) {\n  return { store: state };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}