{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { Button, Form, Col, Row } from \"react-bootstrap\";\n// import { useSelector, useDispatch, connect } from \"react-redux\";\n// import { REQUESTED_SUCCEEDED_CLOSE_USER, USER_EMAIL, USER_NAME, USER_PASSWORD, USER_SURNAME } from \"../redux/types\";\n// import { useHistory } from \"react-router-dom\";\n// import \"../App.css\";\n// import { fetchChange, fetchChangePass } from \"../redux/actionUsers\";\n// function ChangeProfile() {\n//   let history = useHistory();\n//   const dispatch = useDispatch();\n//   const store = useSelector((state) => state);\n//   const [name, setName] = useState(\"\");\n//   const [surname, setSurname] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     dispatch(fetchChange(store.users.userId, name, surname, email, password));\n//     if(store.users.change){\n//       dispatch({ type: USER_NAME, payload: name });\n//       dispatch({ type: USER_SURNAME, payload: surname });\n//       dispatch({ type: USER_EMAIL, payload: email });\n//     }\n//     setTimeout(() => {\n//       dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_USER });\n//     }, 1000);\n//     history.push(\"/users/myAccounts/myProfile\");\n//   };\n//   return (\n//     <div className=\"1auth\">\n//       {/* {store.users.text && <Alert text={store.users.text} />} */}\n//       <div className=\"aform11\">\n//         <Form onSubmit={handleSubmit}>\n//           <Row className=\"mb-3\">\n//             <Form.Group\n//               className=\"mb-3\"\n//               as={Col}\n//               md=\"8\"\n//               controlId=\"formGridAddress1\"\n//               onChange={(e) => setName(e.target.value)}\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>New name</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control placeholder=\"Enter name\" required />\n//             </Form.Group>\n//             <Form.Group\n//               className=\"mb-3\"\n//               controlId=\"formGridAddress2\"\n//               as={Col}\n//               md=\"8\"\n//               onChange={(e) => setSurname(e.target.value)}\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>New surname</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control placeholder=\"Enter surname\" required />\n//             </Form.Group>\n//             <Form.Group\n//               className=\"mb-3\"\n//               controlId=\"formGridEmail\"\n//               as={Col}\n//               md=\"8\"\n//               onChange={(e) => setEmail(e.target.value)}\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>New email</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control type=\"email\" placeholder=\"Enter email\" required />\n//             </Form.Group>\n//             <Form.Group\n//               className=\"mb-3\"\n//               controlId=\"formGridPassword\"\n//               onChange={(e) => setPassword(e.target.value)}\n//               as={Col}\n//               md=\"8\"\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>Enter your password</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control type=\"password\" placeholder=\"Password\" required />\n//             </Form.Group>\n//           </Row>\n//           <Button variant=\"warning\" type=\"submit\">\n//             Save change\n//           </Button>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// }\n// const mapDispatchToProps = {\n//   fetchChange,\n//   // fetchDeleteTickets,\n// };\n// function mapStateToProps(state) {\n//   return { store: state };\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(ChangeProfile);","map":{"version":3,"sources":["/app/src/users/changeProfile.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { Button, Form, Col, Row } from \"react-bootstrap\";\n// import { useSelector, useDispatch, connect } from \"react-redux\";\n// import { REQUESTED_SUCCEEDED_CLOSE_USER, USER_EMAIL, USER_NAME, USER_PASSWORD, USER_SURNAME } from \"../redux/types\";\n// import { useHistory } from \"react-router-dom\";\n// import \"../App.css\";\n// import { fetchChange, fetchChangePass } from \"../redux/actionUsers\";\n\n// function ChangeProfile() {\n//   let history = useHistory();\n//   const dispatch = useDispatch();\n//   const store = useSelector((state) => state);\n//   const [name, setName] = useState(\"\");\n//   const [surname, setSurname] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n\n\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     dispatch(fetchChange(store.users.userId, name, surname, email, password));\n\n\n\n//     if(store.users.change){\n//       dispatch({ type: USER_NAME, payload: name });\n//       dispatch({ type: USER_SURNAME, payload: surname });\n//       dispatch({ type: USER_EMAIL, payload: email });\n//     }\n\n//     setTimeout(() => {\n//       dispatch({ type: REQUESTED_SUCCEEDED_CLOSE_USER });\n//     }, 1000);\n\n//     history.push(\"/users/myAccounts/myProfile\");\n  \n//   };\n\n//   return (\n//     <div className=\"1auth\">\n//       {/* {store.users.text && <Alert text={store.users.text} />} */}\n//       <div className=\"aform11\">\n//         <Form onSubmit={handleSubmit}>\n//           <Row className=\"mb-3\">\n//             <Form.Group\n//               className=\"mb-3\"\n//               as={Col}\n//               md=\"8\"\n//               controlId=\"formGridAddress1\"\n//               onChange={(e) => setName(e.target.value)}\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>New name</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control placeholder=\"Enter name\" required />\n//             </Form.Group>\n\n//             <Form.Group\n//               className=\"mb-3\"\n//               controlId=\"formGridAddress2\"\n//               as={Col}\n//               md=\"8\"\n//               onChange={(e) => setSurname(e.target.value)}\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>New surname</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control placeholder=\"Enter surname\" required />\n//             </Form.Group>\n\n//             <Form.Group\n//               className=\"mb-3\"\n//               controlId=\"formGridEmail\"\n//               as={Col}\n//               md=\"8\"\n//               onChange={(e) => setEmail(e.target.value)}\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>New email</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control type=\"email\" placeholder=\"Enter email\" required />\n//             </Form.Group>\n\n//             <Form.Group\n//               className=\"mb-3\"\n//               controlId=\"formGridPassword\"\n//               onChange={(e) => setPassword(e.target.value)}\n//               as={Col}\n//               md=\"8\"\n//             >\n//               <Form.Label>\n//                 <h4>\n//                   <i>Enter your password</i>\n//                 </h4>\n//               </Form.Label>\n//               <Form.Control type=\"password\" placeholder=\"Password\" required />\n//             </Form.Group>\n//           </Row>\n\n//           <Button variant=\"warning\" type=\"submit\">\n//             Save change\n//           </Button>\n//         </Form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// const mapDispatchToProps = {\n//   fetchChange,\n//   // fetchDeleteTickets,\n// };\n\n// function mapStateToProps(state) {\n//   return { store: state };\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ChangeProfile);\n"]},"metadata":{},"sourceType":"module"}