"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

// adds events to the supplied object
const DISPATCHERS = Symbol('dispatchers');

function _default(object, ...events) {
  if (!object[DISPATCHERS]) {
    object[DISPATCHERS] = {};
  }

  const dispatchersByEventName = object[DISPATCHERS]; // if we're trying to add an event which already exists, then
  // throw an error

  for (const event of events) {
    if (Object.keys(dispatchersByEventName).includes(event)) {
      throw new Error('Trying to add event twice - ' + event);
    }
  }

  const dispatcher = _d3Dispatch.dispatch.apply(null, events);

  for (const event of events) {
    dispatchersByEventName[event] = dispatcher;
  }

  function eventName(type) {
    return type.split('.').shift();
  }

  object.on = function (type, handler) {
    dispatchersByEventName[eventName(type)].on(type, handler);
    return object;
  };

  object.fire = function (type, ...args) {
    dispatchersByEventName[eventName(type)].call(type, object, ...args);
  };
}